apiVersion: v1
kind: Namespace
metadata:
  labels:
    istio-injection: enabled
  name: istio-ingress
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: gateway
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: gateway
    app.kubernetes.io/version: 1.20.2
    helm.sh/chart: gateway-1.20.2
    istio: gateway
  name: gateway
  namespace: istio-ingress
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app: gateway
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: gateway
    app.kubernetes.io/version: 1.20.2
    helm.sh/chart: gateway-1.20.2
    istio: gateway
  name: gateway
  namespace: istio-ingress
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - watch
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: gateway
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: gateway
    app.kubernetes.io/version: 1.20.2
    helm.sh/chart: gateway-1.20.2
    istio: gateway
  name: gateway
  namespace: istio-ingress
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: gateway
subjects:
- kind: ServiceAccount
  name: gateway
  namespace: istio-ingress
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    metallb.universe.tf/address-pool: first-pool
  labels:
    app: gateway
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: gateway
    app.kubernetes.io/version: 1.20.2
    helm.sh/chart: gateway-1.20.2
    istio: gateway
  name: gateway
  namespace: istio-ingress
spec:
  ports:
  - name: status-port
    port: 15021
    protocol: TCP
    targetPort: 15021
  - name: https
    port: 443
    protocol: TCP
    targetPort: 443
  - name: http
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: gateway
    istio: gateway
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: gateway
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: gateway
    app.kubernetes.io/version: 1.20.2
    helm.sh/chart: gateway-1.20.2
    istio: gateway
  name: gateway
  namespace: istio-ingress
spec:
  selector:
    matchLabels:
      app: gateway
      istio: gateway
  template:
    metadata:
      annotations:
        inject.istio.io/templates: gateway
        prometheus.io/path: /stats/prometheus
        prometheus.io/port: "15020"
        prometheus.io/scrape: "true"
        sidecar.istio.io/inject: "true"
      labels:
        app: gateway
        istio: gateway
        sidecar.istio.io/inject: "true"
    spec:
      containers:
      - env: null
        image: auto
        name: istio-proxy
        ports:
        - containerPort: 15090
          name: http-envoy-prom
          protocol: TCP
        resources:
          limits:
            cpu: 2000m
            memory: 1024Mi
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsGroup: 1337
          runAsNonRoot: true
          runAsUser: 1337
      securityContext:
        sysctls:
        - name: net.ipv4.ip_unprivileged_port_start
          value: "0"
      serviceAccountName: gateway
      terminationGracePeriodSeconds: 30
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  labels:
    app: gateway
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: gateway
    app.kubernetes.io/version: 1.20.2
    helm.sh/chart: gateway-1.20.2
    istio: gateway
  name: gateway
  namespace: istio-ingress
spec:
  maxReplicas: 5
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: gateway
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: istio-ca
  namespace: istio-ingress
spec:
  commonName: istio-ca
  duration: 87600h
  isCA: true
  issuerRef:
    group: cert-manager.io
    kind: Issuer
    name: selfsigned
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: istio-ca
  subject:
    organizations:
    - cluster.local
    - cert-manager
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: k8scicd-cert
  namespace: istio-ingress
spec:
  commonName: '*.k8scicd.local'
  dnsNames:
  - '*.k8scicd.local'
  issuerRef:
    kind: Issuer
    name: selfsigned
  secretName: k8scicd-cert
  subject:
    organizations:
    - cluster.local
    - cert-manager
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: istio-ca
  namespace: istio-ingress
spec:
  ca:
    secretName: istio-ca
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: selfsigned
  namespace: istio-ingress
spec:
  selfSigned: {}
---
apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: global-gateway
  namespace: istio-ingress
spec:
  selector:
    istio: gateway
  servers:
  - hosts:
    - '*'
    port:
      name: https
      number: 443
      protocol: HTTPS
    tls:
      credentialName: k8scicd-cert
      mode: SIMPLE
